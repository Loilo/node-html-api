function mitt(e){return e=e||Object.create(null),{on:function(n,t){(e[n]||(e[n]=[])).push(t)},off:function(n,t){e[n]&&e[n].splice(e[n].indexOf(t)>>>0,1)},emit:function(n,t){(e[n]||[]).map(function(e){e(t)}),(e["*"]||[]).map(function(e){e(n,t)})}}}function entries(e){return Object.keys(e).map(function(n){return[n,e[n]]})}function has(e,n){return e.includes?e.includes(n):-1!==e.indexOf(n)}function find(e,n){if(e.find)return e.find(n);for(var t=0;t<e.length;t++)if(n(e[t],t,e))return e[t]}function arrayFrom(e){if(Array.from)return Array.from(e);if(Array.isArray(e))return e.slice(0);for(var n=[],t=0;t<e.length;t++)n.push(e[t]);return n}function isPlainObject(e){return"object"==typeof e&&null==e.prototype}function isCustomTypeConstraint(e){return isPlainObject(e)&&"function"==typeof e.validate&&"function"==typeof e.serialize&&"function"==typeof e.unserialize}function isValidSingleTypeConstraint(e){return has(arrayFrom(presetTypes.keys()),e)||isCustomTypeConstraint(e)}function isValidTypeConstraint(e){return Array.isArray(e)?e.length&&e.every(isValidSingleTypeConstraint):isValidSingleTypeConstraint(e)}function createMultiConstraintDetector(e){Array.isArray(e)||(e=[e]);var n=arrayFrom(presetTypes.keys());return e=e.slice(0).sort(function(e,t){var r=n.indexOf(e),i=n.indexOf(t);return r===i?0:-1===r?-1:-1===i?1:r<i?-1:1}).map(function(e){return presetTypes.has(e)?presetTypes.get(e):e}),function(n,t){return find(e,function(e){try{var r=n;return t&&(r=e.unserialize(n)),e.validate(r)}catch(e){return!1}})}}function isUndef(e){return void 0===e}function validateOptionDefinition(e){if(isValidTypeConstraint(e))return!0;if(!isPlainObject(e))throw new Error("Definition must be a type constraint or an object.");if(!isValidTypeConstraint(e.type))throw Error("Definition must have a valid type constraint");var n=createMultiConstraintDetector(e.type);if(e.required&&!isUndef(e.default))throw new Error("Option can either be required or have a default value, not both");if(e.required||!isUndef(e.default)||null===e.type||Array.isArray(e.type)&&has(e.type,null)||(Array.isArray(e.type)?e.type.push(null):e.type=[e.type,null]),!isUndef(e.default)&&!n(e.default))throw new Error("Default value is invalid")}function validateOptionsDefinition(e){if(!isPlainObject(e))throw new Error("Options definition must be a plain object");for(var n=0,t=entries(e);n<t.length;n+=1){var r=t[n],i=r[0],a=r[1];try{validateOptionDefinition(a),isValidTypeConstraint(a)&&(Array.isArray(a)?has(a,null)||a.push(null):null!==a&&(e[i]=[a,null]))}catch(e){throw new Error('Option definition for option "'+i+'" failed: '+e.message)}}}function getTypeConstraints(e){return isValidTypeConstraint(e)?Array.isArray(e)?e:isCustomTypeConstraint(e)?[e]:[presetTypes.get(e)]:Array.isArray(e.type)?e.type:isCustomTypeConstraint(e.type)?[e.type]:[presetTypes.get(e.type)]}function validateOptionValue(e,n,t){void 0===t&&(t=!1);var r=getTypeConstraints(n);if(null==e&&has(r,null))return t?null:"null";var i,a=createMultiConstraintDetector(r);if(t){var o=a(e,!0);try{i=o.unserialize(e)}catch(n){throw new Error('Invalid serialized option value "'+e+'"')}if(!o.validate(i))throw new Error('Invalid serialized option value "'+e+'"')}else{var u=a(e,!1);if(isUndef(u)||!u.validate(e))throw new Error('Invalid option value "'+e+'"');i=u.serialize(e)}return i}function getInitialValues(e,n,t){for(var r=Object.create(null),i=0,a=entries(n);i<a.length;i+=1)!function(){var n=a[i],o=n[0],u=n[1],s=e.dataset[o];if(null!=s)try{r[o]=validateOptionValue(s,u,!0)}catch(e){throw new Error('Error setting initial option "'+o+'": '+e.message)}else u.required?window.requestAnimationFrame(function(){t.emit("error",new Error('Missing required option "'+o+'"'))}):void 0!==u.default?r[o]=u.default:r[o]=null}();return r}function kebab(e){return e.replace(/([A-Z])/g,function(e,n){return"-"+n.toLowerCase()})}function camel(e){return e.replace(/-([a-z])/g,function(e,n){return n.toUpperCase()})}function createOptionsAttrList(e){return Object.keys(e).map(function(e){return"data-"+kebab(e)})}function createOptionsDefInterface(e,n,t,r){for(var i=Object.create(null),a=0,o=entries(e);a<o.length;a+=1)!function(){var e=o[a],u=e[0],s=e[1];Object.defineProperty(i,u,{get:function(){return t[u]},set:function(e){try{var t=validateOptionValue(e,s,!1);"string"==typeof t?n.dataset[u]=t:delete n.dataset[u]}catch(e){r.emit("error",new Error('Error setting option "'+u+'": '+e.message))}}})}();return i}function observeElement(e,n,t){var r=new window.MutationObserver(function(e){for(var n=0,r=e;n<r.length;n+=1){var i=r[n];"attributes"===i.type&&t(i.attributeName.slice(5),i.oldValue)}});return r.observe(e,{attributes:!0,attributeFilter:n}),r}function createMutationHandler(e,n,t,r){return function(i,a){var o=camel(i),u=n[o],s=e.dataset[o];if(s!==a)try{var l=validateOptionValue(s,u,!0),f=t[o];t[o]=l,r.emit("change",{option:o,oldValue:f,value:l})}catch(e){r.emit("error",new Error('Error setting option "'+o+'" via HTML: '+e.message))}}}function createElementObserver(e,n,t,r){return observeElement(e,createOptionsAttrList(n),createMutationHandler(e,n,t,r))}var presetTypes=new Map([[null,{validate:function(e){return null==e},serialize:function(e){return"null"},unserialize:function(e){return JSON.parse(e)}}],[Boolean,{validate:function(e){return"boolean"==typeof e},serialize:function(e){return e?"":void 0},unserialize:function(e){if(void 0===e||"false"===e)return!1;if(""===e||"true"===e)return!0;throw new Error("Invalidly serialized Boolean")}}],[Number,{validate:function(e){return"number"==typeof e&&!isNaN(e)},serialize:function(e){return String(e)},unserialize:function(e){return+e}}],[Array,{validate:function(e){return Array.isArray(e)},serialize:function(e){return JSON.stringify(e)},unserialize:function(e){return JSON.parse(e)}}],[Object,{validate:function(e){return"object"==typeof e&&!Array.isArray(e)},serialize:function(e){return JSON.stringify(e)},unserialize:function(e){return JSON.parse(e)}}],[Function,{validate:function(e){return"function"==typeof e},serialize:function(e){return String(e)},unserialize:function(value){return eval("("+value+")")}}],[String,{validate:function(e){return"string"==typeof e},serialize:function(e){return e},unserialize:function(e){return e}}]]);export default function htmlApi(e,n){if(!(e instanceof window.Element))throw new Error("No valid Element given");validateOptionsDefinition(n);var t=mitt(),r=getInitialValues(e,n,t),i=createElementObserver(e,n,r,t),a=Object.create(null);return t.on("change",function(e){var n=e.option,t=e.value,r=e.oldValue;"function"==typeof a[n]&&a[n](t,r)}),{options:createOptionsDefInterface(n,e,r,t),onChange:a,on:function(e,n){return t.on(e,n),this},off:function(e,n){return t.off(e,n),this},merge:function(a){validateOptionsDefinition(a),Object.assign(n,a);var o=getInitialValues(e,a,t);return Object.assign(r,o),this.options=createOptionsDefInterface(n,e,r,t),i.disconnect(),i=createElementObserver(e,n,r,t),this},destroy:function(){i.disconnect()}}};htmlApi.Enum=function(){for(var e=[],n=arguments.length;n--;)e[n]=arguments[n];return{validate:function(n){return"string"==typeof n&&has(e,n)},serialize:function(e){return e},unserialize:function(e){return e}}};var numGen=function(e,n,t){return void 0===e&&(e=-1/0),void 0===n&&(n=1/0),void 0===t&&(t=!0),{validate:function(r){return(t||Number.isInteger?Number.isInteger(r):"number"==typeof r&&isFinite(r)&&Math.floor(r)===r)&&r>=e&&r<=n},serialize:function(e){return String(e)},unserialize:function(e){return+e}}};htmlApi.Integer=Object.assign(numGen(-1/0,1/0,!1),{min:function(e){return Object.assign(numGen(e,1/0,!1),{max:function(n){return numGen(e,n,!1)}})},max:function(e){return numGen(-1/0,e,!1)}}),htmlApi.Float=Object.assign(numGen(-1/0,1/0),{min:function(e){return Object.assign(numGen(e,1/0),{max:function(n){return numGen(e,n)}})},max:function(e){return numGen(-1/0,e)}});
