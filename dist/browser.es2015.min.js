var htmlApi=function(){"use strict";function mitt(e,t){return e=e||Object.create(null),t=t||Object.create(null),{on(t,n,r=0){if(0===r)(e[t]||(e[t]=[])).push(n);else{var i=this;this.once(t,function(){i.on(t,n)},r-1)}},once(e,n,r=0){if(0===r)(t[e]||(t[e]=[])).push(n);else{var i=this;(t[e]||(t[e]=[])).push(function(){i.once(e,n,r-1)})}},off(n,r){e[n]&&e[n].splice(e[n].indexOf(r)>>>0,1),t[n]&&t[n].splice(t[n].indexOf(r)>>>0,1)},emit(n,r){(e[n]||[]).map(function(e){e(r)}),(e["*"]||[]).map(function(e){e(n,r)}),(t[n]||[]).map(function(e){e(r)}),(t["*"]||[]).map(function(e){e(n,r)})},clear(){e={},t={}},get _listeners(){return e}}}function entries(e){return Object.keys(e).map(t=>[t,e[t]])}function has(e,t){return e.includes?e.includes(t):-1!==e.indexOf(t)}function find(e,t){if(e.find)return e.find(t);for(let n=0;n<e.length;n++)if(t(e[n],n,e))return e[n]}function toArray(e){if(Array.from)return Array.from(e);if(Array.isArray(e))return e.slice(0);const t=[];for(let n=0;n<e.length;n++)t.push(e[n]);return t}function extend(...e){if(Object.assign)return Object.assign(...e);if(0===e.length)throw new TypeError("Cannot convert undefined or null to object");if(1===e.length)return e[0];for(let t in e[1])e[0][t]=e[1][t];return extend(e[0],...e.slice(2))}function isPlainObject(e){return"object"==typeof e&&null!==e&&null==e.prototype}function isCustomTypeConstraint(e){return isPlainObject(e)&&"function"==typeof e.validate&&"function"==typeof e.serialize&&"function"==typeof e.unserialize}function isValidSingleTypeConstraint(e){return has(toArray(presetTypes.keys()),e)||isCustomTypeConstraint(e)}function isValidTypeConstraint(e){return Array.isArray(e)?e.length&&e.every(isValidSingleTypeConstraint)&&e.some(e=>null!==e):isValidSingleTypeConstraint(e)&&null!==e}function createMultiConstraintDetector(e){Array.isArray(e)||(e=[e]);const t=toArray(presetTypes.keys());return e=e.slice(0).sort((e,n)=>{const r=t.indexOf(e),i=t.indexOf(n);return r===i?0:-1===r?-1:-1===i?1:r<i?-1:1}).map(e=>presetTypes.has(e)?presetTypes.get(e):e),(t,n)=>find(e,e=>{try{let r=t;return n&&(r=e.unserialize(t)),e.validate(r)}catch(e){return!1}})}function isUndef(e){return void 0===e}function matches(e,t){const n=Element.prototype;return(n.matches||n.webkitMatchesSelector||n.mozMatchesSelector||n.msMatchesSelector||function(e){return-1!==[].indexOf.call(document.querySelectorAll(e),this)}).call(e,t)}function validateOptionDefinition(e){if(isValidTypeConstraint(e))return!0;if(!isPlainObject(e))throw new Error("Definition must be a type constraint or an object.");{if(!isValidTypeConstraint(e.type))throw Error("Definition must have a valid type constraint");const t=createMultiConstraintDetector(e.type);if(e.required&&!isUndef(e.default))throw new Error("Option can either be required or have a default value, not both");if(e.required||!isUndef(e.default)||null===e.type||Array.isArray(e.type)&&has(e.type,null)||(Array.isArray(e.type)?e.type.push(null):e.type=[e.type,null]),!isUndef(e.default)&&!t(e.default))throw new Error("Default value is invalid")}}function validateOptionsDefinition(e){if(!isPlainObject(e))throw new Error("Options definition must be a plain object");for(const[t,n]of entries(e))try{validateOptionDefinition(n),isValidTypeConstraint(n)&&(Array.isArray(n)?has(n,null)||n.push(null):null!==n&&(e[t]=[n,null]))}catch(e){throw new Error(`Option definition for option "${t}" failed: ${e.message}`)}}function getTypeConstraints(e){return isValidTypeConstraint(e)?Array.isArray(e)?e:isCustomTypeConstraint(e)?[e]:[presetTypes.get(e)]:Array.isArray(e.type)?e.type:isCustomTypeConstraint(e.type)?[e.type]:[presetTypes.get(e.type)]}function validateOptionValue(e,t,n=!1){const r=getTypeConstraints(t);if(!0===t.required&&void 0===e)throw new Error("Invalid option removal");if(null==e&&has(r,null))return n?null:"null";let i;const o=createMultiConstraintDetector(r);if(n){const t=o(e,!0);try{i=t.unserialize(e)}catch(t){throw new Error(`Invalid serialized option value "${e}"`)}if(!t.validate(i))throw new Error(`Invalid serialized option value "${e}"`)}else{const t=o(e,!1);if(isUndef(t)||!t.validate(e))throw new Error(`Invalid option value "${e}"`);i=t.serialize(e)}return i}function publishChange(e,t,n,r,i=!1){e.emit("change",{option:t,value:n,oldValue:r,initial:i}),e.emit(`change:${t}`,{value:n,oldValue:r,initial:i})}function getInitialValues(e,t,n){const r=Object.create(null),i={};for(const[o,a]of entries(t)){const t=e.dataset[o];if(null!=t)try{r[o]=validateOptionValue(t,a,!0)}catch(e){throw new Error(`Error setting initial option "${o}": ${e.message}`)}else a&&a.required?requestAnimationFrame(()=>{n.emit("error",{type:"missing-required",message:`Missing required option "${o}"`,details:o})}):a&&void 0!==a.default?r[o]=a.default:r[o]=null;i[o]=setTimeout(()=>{publishChange(n,o,r[o],null,!0),delete i[o]},0)}return{values:r,bufferedInitials:i}}function kebab(e){return e.replace(/([A-Z])/g,(e,t)=>"-"+t.toLowerCase())}function camel(e){return e.replace(/-([a-z])/g,(e,t)=>t.toUpperCase())}function createOptionsAttrList(e){return Object.keys(e).map(e=>`data-${kebab(e)}`)}function createOptionsInterface(e,t,n,r){const i=Object.create(null);for(const[o,a]of entries(t))Object.defineProperty(i,o,{get:()=>n[o],set(t){try{const i=validateOptionValue(t,a,!1);"string"==typeof i?(e.dataset[o]=i,n[o]=t):(delete e.dataset[o],delete n[o])}catch(e){r.emit("error",{type:"invalid-value-js",details:{option:o,value:t},message:`Error setting option "${o}": ${e.message}`})}}});return i}function observeAttributes(e,t,n){const r=new MutationObserver(e=>{for(const t of e)"attributes"===t.type&&n(t.attributeName.slice(5),t.oldValue)});return r.observe(e,{attributes:!0,attributeOldValue:!0,attributeFilter:t}),r}function createMutationHandler(e,t,n,r){return(i,o)=>{const a=camel(i),s=t[a],l=e.dataset[a];if(l!==o)try{const e=validateOptionValue(l,s,!0),t=validateOptionValue(o,s,!0);n[a]=e,publishChange(r,a,e,t)}catch(e){r.emit("error",{type:"invalid-value-html",details:{option:a,value:l},message:`Error setting option "${a}" via HTML: ${e.message}`})}}}function createAttributeObserver(e,t,n,r){return observeAttributes(e,createOptionsAttrList(t),createMutationHandler(e,t,n,r))}function validateElementConstraint(e){let t=null;if("string"==typeof e?t=e:e instanceof Element?t=[e]:((e instanceof NodeList||e instanceof HTMLCollection)&&(e=toArray(e)),Array.isArray(e)&&(t=e.every(e=>e instanceof Element)?e:null)),t)return t;throw new Error("Provided elements must either be a selector string, an Element, an array of Elements or a NodeList containing exclusively Element nodes")}function createElementBasedApi(e,t,n){const r=mitt();r.on("*",(t,r)=>{n.emit(t,extend({element:e,elementApi:s},r))});const{values:i,bufferedInitials:o}=getInitialValues(e,t,r);for(const e in o)r.once(`change:${e}`,()=>{clearTimeout(o[e]),delete o[e]});const a=createAttributeObserver(e,t,i,r),s={options:createOptionsInterface(e,t,i,r),on(e,t,n){return r.on(e,t,n),this},once(e,t,n){return r.once(e,t,n),this},off(e,t){return r.off(e,t),this},destroy(){a.disconnect(),r.clear()}};return s}function htmlApi(e){return validateOptionsDefinition(e),t=>{let n=validateElementConstraint(t);const r="string"==typeof n&&n;r&&(n=toArray(document.querySelectorAll(n)));const i=new Map,o=mitt();let a;r&&(a=new MutationObserver(t=>{for(const n of t)if("childList"===n.type){const t=toArray(n.addedNodes).filter(e=>e instanceof Element&&matches(e,r)&&!i.has(e));for(const n of t){const t=createElementBasedApi(n,e,o);i.set(n,t),o.emit("newElement",{element:n,elementApi:t})}for(const e of toArray(n.removedNodes))e instanceof Element&&i.has(e)&&(i.get(e).destroy(),i.delete(e))}})).observe(document.documentElement,{childList:!0,subtree:!0});for(const t of n){const n=createElementBasedApi(t,e,o);i.set(t,n),setTimeout(function(){o.emit("newElement",{element:t,elementApi:n})},0)}return{get elements(){return toArray(i.keys())},for(e){let t;if(e instanceof Element)t=e;else{if("string"!=typeof e)throw new Error("Constraint must either be an Element or a selector string");t=document.querySelector(t)}if(!t)throw new Error("No element found for the given selector");if(!i.has(t))throw new Error("The given element does not have your API attached");return i.get(t)},on(e,t,n){return o.on(e,t,n),this},once(e,t,n){return o.once(e,t,n),this},off(e,t){return o.off(e,t),this},destroy(){a&&a.disconnect(),o.clear();for(const e of toArray(i.values()))e.destroy()}}}}const presetTypes=new Map([[null,{validate:e=>null==e,serialize:e=>"null",unserialize:e=>JSON.parse(e)}],[Boolean,{validate:e=>"boolean"==typeof e,serialize:e=>e?"":void 0,unserialize:e=>{if(void 0===e||"false"===e)return!1;if(""===e||"true"===e)return!0;throw new Error("Invalidly serialized Boolean")}}],[Number,{validate:e=>"number"==typeof e&&!isNaN(e),serialize:e=>String(e),unserialize:e=>+e}],[Array,{validate:e=>Array.isArray(e),serialize:e=>JSON.stringify(e),unserialize:e=>JSON.parse(e)}],[Object,{validate:e=>"object"==typeof e&&null!==e&&!Array.isArray(e),serialize:e=>JSON.stringify(e),unserialize:e=>JSON.parse(e)}],[Function,{validate:e=>"function"==typeof e,serialize:e=>String(e),unserialize:value=>eval(`(${value})`)}],[String,{validate:e=>"string"==typeof e,serialize:e=>e,unserialize:e=>e}]]);htmlApi.Enum=((...e)=>({validate:t=>"string"==typeof t&&has(e,t),serialize:e=>e,unserialize:e=>e}));const numGen=(e=-1/0,t=1/0,n=!0)=>({validate:r=>{if("number"!=typeof r||!isFinite(r))return!1;if(!n)if(Number.isInteger){if(!Number.isInteger(r))return!1}else if(Math.floor(r)!==r)return!1;return r>=e&&r<=t},serialize:e=>String(e),unserialize:e=>+e});return htmlApi.Integer=extend(numGen(-1/0,1/0,!1),{min:e=>extend(numGen(e,1/0,!1),{max:t=>numGen(e,t,!1)}),max:e=>numGen(-1/0,e,!1)}),htmlApi.Float=extend(numGen(-1/0,1/0),{min:e=>extend(numGen(e,1/0),{max:t=>numGen(e,t)}),max:e=>numGen(-1/0,e)}),htmlApi}();
